diff --git a/src/main/java/com/atomist/spring/SpringRestSeedController.java b/src/main/java/com/atomist/spring/SpringRestSeedController.java
new file mode 100644
index 0000000..997bdbb
--- /dev/null
+++ b/src/main/java/com/atomist/spring/SpringRestSeedController.java
@@ -0,0 +1,17 @@
+package com.atomist.spring;
+
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import static org.springframework.web.bind.annotation.RequestMethod.GET;
+
+@RestController
+class SpringRestSeedController {
+
+    @RequestMapping(method = GET, path = "hello/{name}")
+    public String person(@PathVariable String name) {
+        return "Hello " + name + "!";
+    }
+
+}
diff --git a/src/test/java/com/atomist/spring/SpringRestSeedControllerTests.java b/src/test/java/com/atomist/spring/SpringRestSeedControllerTests.java
new file mode 100644
index 0000000..a2b57e3
--- /dev/null
+++ b/src/test/java/com/atomist/spring/SpringRestSeedControllerTests.java
@@ -0,0 +1,35 @@
+package com.atomist.spring;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
+import org.springframework.test.context.junit4.SpringRunner;
+import org.springframework.test.web.servlet.MockMvc;
+
+import static org.hamcrest.Matchers.equalTo;
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
+
+@RunWith(SpringRunner.class)
+@WebMvcTest(SpringRestSeedController.class)
+public class SpringRestSeedControllerTests {
+
+	@Autowired
+	private MockMvc mockMvc;
+
+	@Test
+	public void shouldReturnGreeting() throws Exception {
+		this.mockMvc.perform(get("/hello/Rod"))
+				.andExpect(status().isOk())
+				.andExpect(content().string(equalTo("Hello Rod!")));
+	}
+
+	@Test
+	public void shouldNotFindGreetingElsewhere() throws Exception {
+		this.mockMvc.perform(get("/hey/man"))
+				.andExpect(status().isNotFound());
+	}
+
+}
